{"ast":null,"code":"var _jsxFileName = \"E:\\\\nhluan\\\\Work\\\\Traning-Mentor\\\\Coding\\\\Pomonoro-Reactjs\\\\src\\\\components\\\\store\\\\task-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_TASK = [{\n  id: 'e1',\n  title: 'Exam Test 1',\n  number: 1,\n  achieve: 0,\n  content: \"Doing in 120 minutes\"\n}, {\n  id: 'e2',\n  title: 'New TV',\n  achieve: 0,\n  number: 1\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  number: 2,\n  achieve: 0\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  number: 3,\n  achieve: 0\n}];\nconst TaskContext = /*#__PURE__*/React.createContext({\n  tasks: DUMMY_TASK,\n  addTask: tasks => {},\n  deleteTask: id => {},\n  updateTask: (id, updateTask) => {},\n  taskItemClick: id => {},\n  selectedTaskId: \"\",\n  selectedFormId: \"\",\n  chooseForm: id => {},\n  longBreakInterval: 2\n});\nexport const TaskContextProvider = props => {\n  _s();\n  var _tasks$;\n  const [tasks, setTasks] = useState(DUMMY_TASK);\n  const [selectedTaskId, setSelectedTaskId] = useState(((_tasks$ = tasks[0]) === null || _tasks$ === void 0 ? void 0 : _tasks$.id) || \"\");\n  const [selectedFormId, setSelectedFormId] = useState(null);\n  const handleTaskItemClick = taskId => {\n    setSelectedTaskId(taskId);\n  };\n  const handleTaskForm = taskId => {\n    setSelectedFormId(taskId);\n  };\n  const addTaskHandler = taskData => {\n    setTasks(prevTasks => {\n      return [...prevTasks, taskData];\n    });\n  };\n  const deleteItemHandler = goalId => {\n    var _tasks$2, _tasks$3;\n    console.log((_tasks$2 = tasks[1]) === null || _tasks$2 === void 0 ? void 0 : _tasks$2.id);\n    setSelectedTaskId(((_tasks$3 = tasks[1]) === null || _tasks$3 === void 0 ? void 0 : _tasks$3.id) || \"\");\n    setTasks(prevTasks => {\n      const updatedGoals = prevTasks.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n  const updateTaskHandler = (taskId, updatedTaskData) => {\n    setTasks(prevTasks => {\n      const updatedTasks = prevTasks.map(task => {\n        if (task.id === taskId) {\n          return {\n            ...task,\n            ...updatedTaskData\n          };\n        }\n        return task;\n      });\n      return updatedTasks;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: tasks,\n      // danh sách các Task\n      addTask: addTaskHandler,\n      // hàm thêm vào Tasks\n      deleteTask: deleteItemHandler,\n      // xóa bỏ task\n      taskItemClick: handleTaskItemClick,\n      // kiểm tra xem đang ở task nào 1 lần chỉ được 1 task\n      selectedTaskId: selectedTaskId,\n      chooseForm: handleTaskForm,\n      // kiểm tra mỗi 1 lần chỉ được 1 form\n      selectedFormId: selectedFormId,\n      longBreakInterval: 2,\n      updateTask: updateTaskHandler // dùng để update\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n};\n_s(TaskContextProvider, \"GrM+HVG24P2LWwi7HAY5gmRultQ=\");\n_c = TaskContextProvider;\nexport default TaskContext;\nvar _c;\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DUMMY_TASK","id","title","number","achieve","content","TaskContext","createContext","tasks","addTask","deleteTask","updateTask","taskItemClick","selectedTaskId","selectedFormId","chooseForm","longBreakInterval","TaskContextProvider","props","_s","_tasks$","setTasks","setSelectedTaskId","setSelectedFormId","handleTaskItemClick","taskId","handleTaskForm","addTaskHandler","taskData","prevTasks","deleteItemHandler","goalId","_tasks$2","_tasks$3","console","log","updatedGoals","filter","goal","updateTaskHandler","updatedTaskData","updatedTasks","map","task","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/nhluan/Work/Traning-Mentor/Coding/Pomonoro-Reactjs/src/components/store/task-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nconst DUMMY_TASK = [\r\n    {\r\n        id: 'e1',\r\n        title: 'Exam Test 1',\r\n        number: 1,\r\n        achieve: 0,\r\n        content: \"Doing in 120 minutes\"\r\n    },\r\n    { id: 'e2', title: 'New TV', achieve: 0, number: 1 },\r\n    {\r\n        id: 'e3',\r\n        title: 'Car Insurance',\r\n        number: 2,\r\n        achieve: 0,\r\n    },\r\n    {\r\n        id: 'e4',\r\n        title: 'New Desk (Wooden)',\r\n        number: 3,\r\n        achieve: 0,\r\n    },\r\n];\r\nconst TaskContext = React.createContext({\r\n    tasks: DUMMY_TASK,\r\n    addTask: (tasks) => { },\r\n    deleteTask: (id) => { },\r\n    updateTask: (id, updateTask) => { },\r\n    taskItemClick: (id) => { },\r\n    selectedTaskId: \"\",\r\n    selectedFormId: \"\",\r\n    chooseForm: (id) => { },\r\n    longBreakInterval: 2\r\n});\r\nexport const TaskContextProvider = (props) => {\r\n    const [tasks, setTasks] = useState(DUMMY_TASK);\r\n    const [selectedTaskId, setSelectedTaskId] = useState(tasks[0]?.id || \"\");\r\n    const [selectedFormId, setSelectedFormId] = useState(null);\r\n    const handleTaskItemClick = (taskId) => {\r\n        setSelectedTaskId(taskId);\r\n    };\r\n    const handleTaskForm = (taskId) => {\r\n        setSelectedFormId(taskId);\r\n    };\r\n    const addTaskHandler = taskData => {\r\n        setTasks(prevTasks => {\r\n            return [...prevTasks, taskData]\r\n        });\r\n    };\r\n    const deleteItemHandler = goalId => {\r\n        console.log(tasks[1]?.id)\r\n        setSelectedTaskId(tasks[1]?.id || \"\")\r\n        setTasks(prevTasks => {\r\n            const updatedGoals = prevTasks.filter(goal => goal.id !== goalId);\r\n            return updatedGoals;\r\n        });\r\n    };\r\n\r\n    const updateTaskHandler = (taskId, updatedTaskData) => {\r\n        setTasks(prevTasks => {\r\n            const updatedTasks = prevTasks.map(task => {\r\n                if (task.id === taskId) {\r\n                    return { ...task, ...updatedTaskData };\r\n                }\r\n                return task;\r\n            });\r\n            return updatedTasks;\r\n        });\r\n    };\r\n    return (<TaskContext.Provider value={{\r\n        tasks: tasks, // danh sách các Task\r\n        addTask: addTaskHandler, // hàm thêm vào Tasks\r\n        deleteTask: deleteItemHandler, // xóa bỏ task\r\n        taskItemClick: handleTaskItemClick,  // kiểm tra xem đang ở task nào 1 lần chỉ được 1 task\r\n        selectedTaskId: selectedTaskId,\r\n        chooseForm: handleTaskForm,// kiểm tra mỗi 1 lần chỉ được 1 form\r\n        selectedFormId: selectedFormId,\r\n        longBreakInterval: 2, updateTask: updateTaskHandler,// dùng để update\r\n    }}>{props.children}</TaskContext.Provider>)\r\n\r\n}\r\nexport default TaskContext"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}