{"ast":null,"code":"var _jsxFileName = \"E:\\\\nhluan\\\\Work\\\\Traning-Mentor\\\\Coding\\\\Pomonoro-Reactjs\\\\src\\\\components\\\\PomodoroTimer\\\\PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Fragment, useContext } from \"react\";\nimport classes from \"./PomodoroTimer.module.css\";\nimport Button from \"../UI/Button\";\nimport TaskContext from \"../store/task-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = props => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(props.pomodoroTime * 60);\n  const taskCtx = useContext(TaskContext);\n  //   useEffect(() => {\n  //     if (isRunning) {\n  //         const checkTimeEl = document.querySelector(`.${classes.checkTime}`);\n  //         const intervalId = setInterval(() => {\n  //             setCurrentPosition((currentPosition) => {\n  //                 const newCurrentPosition = currentPosition + 1;\n  //                 const maxPosition = countdown.timer * 60;\n  //                 const check = (newCurrentPosition * 100) / maxPosition;\n  //                 if (check >= 100) {\n  //                     handleButtonClick(\"Pomodoro\", 1);\n  //                 } else {\n  //                     checkTimeEl.style.width = `${check}%`;\n  //                 }\n  //                 return newCurrentPosition > maxPosition ? 0 : newCurrentPosition;\n  //             });\n  //         }, 1000);\n  //         intervalIdRef.current = intervalId;\n  //     } else {\n  //         clearInterval(intervalIdRef.current);\n  //         intervalIdRef.current = null;\n  //     }\n  //     return () => clearInterval(intervalIdRef.current);\n  // }, [isRunning, countdown]);\n  useEffect(() => {\n    let interval = null;\n    if (props.isRunning && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n        const check = 100 - timeLeft * 100 / (props.pomodoroTime * 60);\n        props.setWidth(check);\n      }, 1000);\n    } else {\n      // clear được gọi để ngừng chu kỳ lặp lại\n      clearInterval(interval);\n    }\n    if (timeLeft === 0) {\n      props.setCreateTask();\n      props.resetTime();\n      const taskToUpdate = taskCtx.tasks.find(task => task.id === taskCtx.selectedTaskId);\n      taskToUpdate.achieve++;\n      taskCtx.updateTask(taskToUpdate.id, taskToUpdate);\n    }\n    return () => clearInterval(interval);\n  }, [props.isRunning, timeLeft]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes < 10 ? \"0\" : \"\"}${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.time,\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"nLccbgsmKNHDpYZdrLM7H05mw20=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","useContext","classes","Button","TaskContext","jsxDEV","_jsxDEV","PomodoroTimer","props","_s","timeLeft","setTimeLeft","pomodoroTime","taskCtx","interval","isRunning","setInterval","check","setWidth","clearInterval","setCreateTask","resetTime","taskToUpdate","tasks","find","task","id","selectedTaskId","achieve","updateTask","formatTime","time","minutes","Math","floor","seconds","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/nhluan/Work/Traning-Mentor/Coding/Pomonoro-Reactjs/src/components/PomodoroTimer/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect, Fragment, useContext } from \"react\";\r\nimport classes from \"./PomodoroTimer.module.css\"\r\nimport Button from \"../UI/Button\";\r\nimport TaskContext from \"../store/task-context\";\r\n\r\nconst PomodoroTimer = (props) => {\r\n  const [timeLeft, setTimeLeft] = useState(props.pomodoroTime * 60);\r\n  const taskCtx = useContext(TaskContext)\r\n  //   useEffect(() => {\r\n  //     if (isRunning) {\r\n  //         const checkTimeEl = document.querySelector(`.${classes.checkTime}`);\r\n  //         const intervalId = setInterval(() => {\r\n  //             setCurrentPosition((currentPosition) => {\r\n  //                 const newCurrentPosition = currentPosition + 1;\r\n  //                 const maxPosition = countdown.timer * 60;\r\n  //                 const check = (newCurrentPosition * 100) / maxPosition;\r\n  //                 if (check >= 100) {\r\n  //                     handleButtonClick(\"Pomodoro\", 1);\r\n  //                 } else {\r\n  //                     checkTimeEl.style.width = `${check}%`;\r\n  //                 }\r\n  //                 return newCurrentPosition > maxPosition ? 0 : newCurrentPosition;\r\n  //             });\r\n  //         }, 1000);\r\n  //         intervalIdRef.current = intervalId;\r\n  //     } else {\r\n  //         clearInterval(intervalIdRef.current);\r\n  //         intervalIdRef.current = null;\r\n  //     }\r\n  //     return () => clearInterval(intervalIdRef.current);\r\n  // }, [isRunning, countdown]);\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (props.isRunning && timeLeft > 0) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n        const check = 100 - (timeLeft * 100) / (props.pomodoroTime * 60);\r\n        props.setWidth(check)\r\n      }, 1000);\r\n    } else {\r\n      // clear được gọi để ngừng chu kỳ lặp lại\r\n      clearInterval(interval);\r\n    }\r\n    if (timeLeft === 0) {\r\n      props.setCreateTask();\r\n      props.resetTime();\r\n      const taskToUpdate = taskCtx.tasks.find(task => task.id === taskCtx.selectedTaskId);\r\n      taskToUpdate.achieve++;\r\n      taskCtx.updateTask(taskToUpdate.id,taskToUpdate);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [props.isRunning, timeLeft]);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${minutes < 10 ? \"0\" : \"\"}${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.time}>{formatTime(timeLeft)}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACxE,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,WAAW,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACU,KAAK,CAACI,YAAY,GAAG,EAAE,CAAC;EACjE,MAAMC,OAAO,GAAGZ,UAAU,CAACG,WAAW,CAAC;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAL,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,GAAG,IAAI;IAEnB,IAAIN,KAAK,CAACO,SAAS,IAAIL,QAAQ,GAAG,CAAC,EAAE;MACnCI,QAAQ,GAAGE,WAAW,CAAC,MAAM;QAC3BL,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;QACzB,MAAMO,KAAK,GAAG,GAAG,GAAIP,QAAQ,GAAG,GAAG,IAAKF,KAAK,CAACI,YAAY,GAAG,EAAE,CAAC;QAChEJ,KAAK,CAACU,QAAQ,CAACD,KAAK,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL;MACAE,aAAa,CAACL,QAAQ,CAAC;IACzB;IACA,IAAIJ,QAAQ,KAAK,CAAC,EAAE;MAClBF,KAAK,CAACY,aAAa,EAAE;MACrBZ,KAAK,CAACa,SAAS,EAAE;MACjB,MAAMC,YAAY,GAAGT,OAAO,CAACU,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKb,OAAO,CAACc,cAAc,CAAC;MACnFL,YAAY,CAACM,OAAO,EAAE;MACtBf,OAAO,CAACgB,UAAU,CAACP,YAAY,CAACI,EAAE,EAACJ,YAAY,CAAC;IAClD;IAEA,OAAO,MAAMH,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,KAAK,CAACO,SAAS,EAAEL,QAAQ,CAAC,CAAC;EAE/B,MAAMoB,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMI,OAAO,GAAGJ,IAAI,GAAG,EAAE;IACzB,OAAQ,GAAEC,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,EAAC;EACpF,CAAC;EAID,oBACE7B,OAAA,CAACN,QAAQ;IAAAoC,QAAA,eACP9B,OAAA;MAAK+B,SAAS,EAAEnC,OAAO,CAAC6B,IAAK;MAAAK,QAAA,EAAEN,UAAU,CAACpB,QAAQ;IAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEf,CAAC;AAAChC,EAAA,CA/DIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}